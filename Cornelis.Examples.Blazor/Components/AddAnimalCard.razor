@inject IAnimalManagementService AnimalManagentService

<Card Class="@Class">
    <CardBody>
        <Field>
            <FieldLabel>Rfid:</FieldLabel>
            <FieldBody>
                <TextEdit @bind-text="@Animal.Rfid" Placeholder="Rfid..." />
            </FieldBody>
        </Field>

        <Field>
            <FieldLabel>Kill Date:</FieldLabel>
            <FieldBody>
                <DateEdit @bind-Date="@Animal.KillDate" />
            </FieldBody>
        </Field>

        <Field>
            <FieldLabel>Body Number:</FieldLabel>
            <FieldBody>
                <NumericEdit @bind-Value="@Animal.BodyNumber" />
            </FieldBody>
        </Field>

        <Field>
            <FieldLabel>Ossification:</FieldLabel>
            <FieldBody>
                <NumericEdit @bind-Value="@Animal.Ossification" />
            </FieldBody>
        </Field>

        <Field>
            <FieldLabel>Hump:</FieldLabel>
            <FieldBody>
                <NumericEdit @bind-Value="@Animal.HumpHeight" />
            </FieldBody>
        </Field>
        <Button @onclick="Add" Color="Color.Dark">Insert or Update</Button>
        <Button @onclick="Search" Color="Color.Dark">Search On RFID</Button>
    </CardBody>
</Card>

@code {
    [Parameter]
    public string Class { get; set; }

    Animal Animal { get; set; } = new Animal();

    async void Add()
    {
        if (string.IsNullOrWhiteSpace(Animal.Rfid))
        {
            return;
        }

        var success = await AnimalManagentService.UpdateOrInsertAsync(Animal);

        if (success)
        {
            Animal = new Animal();
        }

        StateHasChanged();
    }

    async void Search()
    {
        if (string.IsNullOrWhiteSpace(Animal.Rfid))
        {
            return;
        }

        Animal = await AnimalManagentService.SearchAnimalAsync(Animal.Rfid);

        StateHasChanged();
    }
}